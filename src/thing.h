/*
 * Copyright (C) 2011 Neil McGill
 *
 * See the LICENSE file.
 */

boolean thing_init(void);
void thing_fini(void);
thingp thing_new(levelp, const char *name);
void thing_restarted(thingp t, levelp level);
void thing_destroy(thingp, const char *why);
void thing_tick_all(void);
void thing_bury(thingp);
void thing_dead(thingp, thingp killer,
                const char *fmt, ...) __attribute__ ((format (printf, 3, 4)));
void things_level_start(levelp);
void things_level_destroyed(levelp);
void things_level_restarted(levelp);
void thing_stop(thingp t);
void thing_resume(thingp t);
void things_stop(levelp level);
void things_stop_all_except(levelp level, thingp t);
void demarshal_thing(demarshal_p ctx, thingp);
void marshal_thing(marshal_p ctx, thingp);
void thing_templates_marshal(marshal_p out);
void things_marshal(marshal_p out);
void thing_set_wid(thingp, widp);
int32_t thing_grid_x(thingp);
int32_t thing_grid_y(thingp);
widp thing_wid(thingp);
const char *thing_dead_reason(thingp);
thing_templatep thing_get_template(thingp t);
const char *thing_name(thingp);
const char *thing_logname(thingp);
const char *thing_shortname(thingp);
uint8_t thing_z_depth(thingp);
uint8_t thing_z_order(thingp);
tree_rootp thing_tile_tiles(thingp);
tree_rootp thing_tile_tiles2(thingp);
uint32_t thing_level_no(thingp);
void thing_set_level_no(thingp, uint32_t level);
levelp thing_level(thingp);
void thing_set_level(thingp, levelp level);
uint32_t thing_lives(thingp);
void thing_set_lives(thingp, uint32_t lives);
uint32_t thing_score(thingp);
void thing_set_score(thingp, uint32_t score);
uint32_t thing_score_pump(thingp);
widp thing_message(thingp t, const char *message);
void thing_set_score_pump(thingp, uint32_t score);
void thing_inc_score_pump(thingp, uint32_t score);
void thing_animate(thingp);
boolean thing_find_nexthop(thingp t, int32_t *x, int32_t *y);
void thing_collision(thingp t, int32_t x, int32_t y);
void thing_inc_powerup_spam_count(thingp t, boolean val);
void thing_dec_powerup_spam_count(thingp t, boolean val);
boolean thing_has_powerup_spam_count(thingp t);
void thing_inc_powerup2_count(thingp t, boolean val);
void thing_dec_powerup2_count(thingp t, boolean val);
boolean thing_has_powerup2_count(thingp t);
void thing_inc_powerup3_count(thingp t, boolean val);
void thing_dec_powerup3_count(thingp t, boolean val);
boolean thing_has_powerup3_count(thingp t);
void thing_inc_powerup4_count(thingp t, boolean val);
void thing_dec_powerup4_count(thingp t, boolean val);
boolean thing_has_powerup4_count(thingp t);
void thing_inc_powerup5_count(thingp t, boolean val);
void thing_dec_powerup5_count(thingp t, boolean val);
boolean thing_has_powerup5_count(thingp t);
void thing_inc_powerup6_count(thingp t, boolean val);
void thing_dec_powerup6_count(thingp t, boolean val);
boolean thing_has_powerup6_count(thingp t);
void thing_inc_powerup7_count(thingp t, boolean val);
void thing_dec_powerup7_count(thingp t, boolean val);
boolean thing_has_powerup7_count(thingp t);
void thing_inc_powerup8_count(thingp t, boolean val);
void thing_dec_powerup8_count(thingp t, boolean val);
boolean thing_has_powerup8_count(thingp t);
void thing_inc_powerup_rocket_count(thingp t, boolean val);
void thing_dec_powerup_rocket_count(thingp t, boolean val);
boolean thing_has_powerup_rocket_count(thingp t);
void thing_set_is_qqq1(thingp t, boolean val);
boolean thing_is_qqq1(thingp t);
void thing_set_is_qqq2(thingp t, boolean val);
boolean thing_is_qqq2(thingp t);
void thing_set_is_qqq3(thingp t, boolean val);
boolean thing_is_qqq3(thingp t);
void thing_set_is_qqq4(thingp t, boolean val);
boolean thing_is_qqq4(thingp t);
void thing_set_is_qqq5(thingp t, boolean val);
boolean thing_is_qqq5(thingp t);
void thing_set_is_qqq6(thingp t, boolean val);
boolean thing_is_qqq6(thingp t);
void thing_set_is_qqq7(thingp t, boolean val);
boolean thing_is_qqq7(thingp t);
void thing_set_is_chasing_target(thingp t, boolean val);
boolean thing_is_chasing_target(thingp t);
void thing_set_got_to_exit_first(thingp t, boolean val);
boolean thing_got_to_exit_first(thingp t);
void thing_set_redo_maze_search(thingp t, boolean val);
boolean thing_redo_maze_search(thingp t);
void thing_set_is_dir_down(thingp t, boolean val);
boolean thing_is_dir_down(thingp t);
void thing_set_is_dir_up(thingp t, boolean val);
boolean thing_is_dir_up(thingp t);
void thing_set_is_dir_left(thingp t, boolean val);
boolean thing_is_dir_left(thingp t);
void thing_set_is_dir_right(thingp t, boolean val);
boolean thing_is_dir_right(thingp t);
void thing_set_opened_exit(thingp t, boolean val);
boolean thing_opened_exit(thingp t);
void thing_set_is_open(thingp t, boolean val);
boolean thing_is_open(thingp t);
void thing_set_is_buried(thingp t, boolean val);
boolean thing_is_buried(thingp t);
void thing_set_is_left_as_corpse_on_death(thingp t, boolean val);
boolean thing_is_left_as_corpse_on_death(thingp t);
void thing_set_is_dead(thingp t, boolean val);
boolean thing_is_dead(thingp t);
void thing_set_qqq20(thingp t, boolean val);
boolean thing_qqq20(thingp t);
const char *thing_name(thingp);
const char *thing_shortname(thingp);
const char *thing_tooltip(thingp);
uint8_t thing_z_depth(thingp);
uint8_t thing_z_order(thingp);
int32_t thing_player_cost(thingp);
int32_t thing_monst_cost(thingp);
uint32_t thing_speed(thingp);
tree_rootp thing_tiles(thingp);
tree_rootp thing_tiles2(thingp);

extern tree_rootp things;

boolean thing_is_exit(thingp t);
boolean thing_is_floor(thingp t);
boolean thing_is_food(thingp t);
boolean thing_is_letter(thingp t);
boolean thing_is_monst(thingp t);
boolean thing_is_plant(thingp t);
boolean thing_is_player(thingp t);
boolean thing_is_snail(thingp t);
boolean thing_is_star_yellow(thingp t);
boolean thing_is_xxx1(thingp t);
boolean thing_is_xxx2(thingp t);
boolean thing_is_xxx3(thingp t);
boolean thing_is_xxx4(thingp t);
boolean thing_is_xxx5(thingp t);
boolean thing_is_xxx6(thingp t);
boolean thing_is_xxx7(thingp t);
boolean thing_is_xxx8(thingp t);
boolean thing_is_star(thingp t);
boolean thing_is_powerup_spam(thingp t);
boolean thing_is_xxx11(thingp t);
boolean thing_is_car(thingp t);
boolean thing_is_star_green(thingp t);
boolean thing_is_star_cyan(thingp t);
boolean thing_is_star_black(thingp t);
boolean thing_is_star_purple(thingp t);
boolean thing_is_explosion(thingp t);
boolean thing_is_spikes(thingp t);
boolean thing_is_star_red(thingp t);
boolean thing_is_star_red(thingp t);
boolean thing_is_star_blue(thingp t);
boolean thing_is_seedpod(thingp t);
boolean thing_is_bomb(thingp t);
boolean thing_is_spam(thingp t);
boolean thing_is_door(thingp t);
boolean thing_is_pipe(thingp t);
boolean thing_is_scarable(thingp t);
boolean thing_is_shrunk_when_carried(thingp t);
boolean thing_is_hidden_from_editor(thingp t);
boolean thing_is_animated(thingp t);
boolean thing_is_powerup_rocket(thingp t);
boolean thing_is_left_as_corpse_on_death(thingp t);
boolean thing_is_esnail(thingp t);
boolean thing_is_bonus_letter(thingp t);
boolean thing_is_thing(thingp t);
boolean thing_is_joinable(thingp t);
boolean thing_is_wall(thingp t);
boolean thing_is_effect_sway(thingp t);
boolean thing_is_effect_pulse(thingp t);
boolean thing_is_effect_rotate_4way(thingp t);
boolean thing_is_effect_rotate_2way(thingp t);
int16_t thing_path_cost_is_exit(thingp t);
int16_t thing_path_cost_is_floor(thingp t);
int16_t thing_path_cost_is_food(thingp t);
int16_t thing_path_cost_is_letter(thingp t);
int16_t thing_path_cost_is_monst(thingp t);
int16_t thing_path_cost_is_plant(thingp t);
int16_t thing_path_cost_is_player(thingp t);
int16_t thing_path_cost_is_snail(thingp t);
int16_t thing_path_cost_is_star_yellow(thingp t);
int16_t thing_path_cost_is_xxx1(thingp t);
int16_t thing_path_cost_is_xxx2(thingp t);
int16_t thing_path_cost_is_xxx3(thingp t);
int16_t thing_path_cost_is_xxx4(thingp t);
int16_t thing_path_cost_is_xxx5(thingp t);
int16_t thing_path_cost_is_xxx6(thingp t);
int16_t thing_path_cost_is_xxx7(thingp t);
int16_t thing_path_cost_is_xxx8(thingp t);
int16_t thing_path_cost_is_star(thingp t);
int16_t thing_path_cost_is_powerup_spam(thingp t);
int16_t thing_path_cost_is_xxx11(thingp t);
int16_t thing_path_cost_is_car(thingp t);
int16_t thing_path_cost_is_star_green(thingp t);
int16_t thing_path_cost_is_star_cyan(thingp t);
int16_t thing_path_cost_is_star_black(thingp t);
int16_t thing_path_cost_is_star_purple(thingp t);
int16_t thing_path_cost_is_explosion(thingp t);
int16_t thing_path_cost_is_spikes(thingp t);
int16_t thing_path_cost_is_star_red(thingp t);
int16_t thing_path_cost_is_star_red(thingp t);
int16_t thing_path_cost_is_star_blue(thingp t);
int16_t thing_path_cost_is_seedpod(thingp t);
int16_t thing_path_cost_is_bomb(thingp t);
int16_t thing_path_cost_is_spam(thingp t);
int16_t thing_path_cost_is_door(thingp t);
int16_t thing_path_cost_is_pipe(thingp t);
int16_t thing_path_cost_is_scarable(thingp t);
int16_t thing_path_cost_is_shrunk_when_carried(thingp t);
int16_t thing_path_cost_is_hidden_from_editor(thingp t);
int16_t thing_path_cost_is_animated(thingp t);
int16_t thing_path_cost_is_powerup_rocket(thingp t);
int16_t thing_path_cost_is_left_as_corpse_on_death(thingp t);
int16_t thing_path_cost_is_esnail(thingp t);
int16_t thing_path_cost_is_bonus_letter(thingp t);
int16_t thing_path_cost_is_thing(thingp t);
int16_t thing_path_cost_is_joinable(thingp t);
int16_t thing_path_cost_is_wall(thingp t);
int16_t thing_path_cost_is_effect_sway(thingp t);
int16_t thing_path_cost_is_effect_pulse(thingp t);
int16_t thing_path_cost_is_effect_rotate_4way(thingp t);
int16_t thing_path_cost_is_effect_rotate_2way(thingp t);
thing_tilep thing_current_tile(thingp t);
void thing_reached_exit(thingp t);
void thing_place(void *);

typedef struct {
    thing_templatep thing_template;
    levelp level;
    int32_t x;
    int32_t y;
} thing_place_context_t;

void thing_teleport(thingp t, int32_t x, int32_t y);
